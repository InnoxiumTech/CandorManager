plugins {

    id 'java'
    id 'application'
//    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.beryx.runtime' version '1.12.4'
}

switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
    default:
        project.ext.lwjglNatives = "natives-linux"
        break
}

group 'uk.co.innoxium.candor'
version 'snapshot'

//apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply from: 'publish.gradle'

mainClassName = 'uk.co.innoxium.candor.CandorLauncher'

def repsyUser = "user"
def repsyPass = "passw"

// Enforce java 14 toolchain, as jpackage breaks log4j2 on jkd15+
java {

    toolchain {

        languageVersion = JavaLanguageVersion.of(16)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

repositories {

    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://repository.apache.org/snapshots' }
    maven {

        name 'Innoxium Repo'
        url "https://repo.repsy.io/mvn/innoxium/innoxium/"
    }
}

dependencies {

    // Anything accessed by using libs.something can be found in /gradle/libs.version.toml - a gradle 7 feature preview
    implementation libs.bundles.innoxium

    implementation libs.nightconfig
    implementation libs.miglayout

    implementation libs.bundles.google
    implementation libs.bundles.apache

    implementation libs.uuidcreator

    // Includes disruptor for async logging
    implementation libs.bundles.log4j

    implementation libs.appdirs

    // Async http client - BOM's should not go in version catalog, maybe in the future?
    implementation platform("org.asynchttpclient:async-http-client-bom:2.12.3")
    implementation "org.asynchttpclient:async-http-client"

    // Flat LAF
    implementation libs.bundles.flatlaf

    // EA Async, adds async/await like .NET has
    implementation libs.eaasync

    // We want native file dialogs, lets use LWJGL for that
    implementation platform("org.lwjgl:lwjgl-bom:3.3.0-SNAPSHOT")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-tinyfd"
    implementation 'org.jetbrains:annotations:20.1.0'
    runtimeOnly "org.lwjgl:lwjgl::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl::natives-macos"
    runtimeOnly "org.lwjgl:lwjgl::natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-nfd::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-nfd::natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-nfd::natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::natives-linux"

    // Record builder
    annotationProcessor 'io.soabase.record-builder:record-builder-processor:1.19'
    compileOnly 'io.soabase.record-builder:record-builder-core:1.19'
}

jar {

    manifest {

        attributes 'Main-Class': 'uk.co.innoxium.candor.CandorLauncher'
        attributes 'Premain-Class': 'ca.cgjennings.jvm.JarLoader'
        attributes 'SplashScreen-Image': 'splash.png'

        // Set Class Path
        attributes ("Class-Path": configurations.runtimeClasspath.collect { "libs/" + it.getName()}.join(' '))
    }
}

task zipCandor(type: Zip) {

    from "$buildDir/package"
//    include '*'
//    include '*/*'
    exclude '*.zip'
    archiveFileName = 'CandorModManager.zip'
    destinationDirectory = file("$buildDir/package")
}

task copyBuild(type: Copy) {

    dependsOn 'build'
    from "$buildDir/libs"
    include "CandorManager-snapshot.jar"
    into "$buildDir/package"
}

task copyLibs(type: Copy) {

    from configurations.runtimeClasspath
    into "$buildDir/package/libs"
}

task packageCandor() {

    dependsOn 'clean', 'copyBuild', 'copyLibs', 'zipCandor'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {

    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

jar.finalizedBy javadocJar
jar.finalizedBy sourcesJar

//shadowJar.finalizedBy javadocJar
//shadowJar.finalizedBy sourcesJar

publishing {

    publications {

        CandorPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'uk.co.innoxium.candor'
            artifactId 'candor-api'
            version '0.3.0-pre2'
        }
    }
    repositories {

        maven {

            url "https://repo.repsy.io/mvn/innoxium/innoxium"
            credentials {

                username repsyUser
                password repsyPass
            }
        }
    }
}