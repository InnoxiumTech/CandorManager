plugins {

    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id "com.jfrog.bintray" version '1.8.5'
}

def props = new Properties()
//file("bintray.properties").withInputStream { props.load(it) }

subprojects {

    group 'me.shadowchild.candor'
    version 'snapshot'
}

allprojects {

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'

    sourceCompatibility = 14

//    mainClassName = 'me.shadowchild.candor.CandorLauncher'

    repositories {

        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

//    tasks.withType(JavaCompile) {
//        options.compilerArgs += '--enable-preview'
//    }
//    tasks.withType(Test) {
//        jvmArgs += "--enable-preview"
//    }
}

//jar.enabled = false

//apply plugin: 'com.github.johnrengelman.shadow'

dependencies {

    compile project(":core")
    compile project(":gui")
    compile project(":entry")
//    compile project(":genericmodule")
}

shadowJar {

    archiveBaseName = 'CandorManager'
    archiveClassifier = ''
//    archiveVersion = "${subprojects.version[0]}"
//    classifier = ''
    exclude 'me/shadowchild/candor/generic/**'

    manifest {

        attributes 'Main-Class': 'me.shadowchild.candor.CandorLauncher'
        attributes 'Premain-Class': 'ca.cgjennings.jvm.JarLoader'
        attributes 'SplashScreen-Image': 'splash.png'
    }
}

task copyGenericModule(type: Copy) {

    dependsOn 'shadowJar'

    File packOutput = new File(project.getBuildDir(), "packaged/module/")
    if(!packOutput.exists()) packOutput.mkdirs()

    from "$projectDir/genericmodule/build/libs"
    into "$buildDir/packaged/module/"
}

task copyJars(type: Copy) {

    dependsOn 'copyGenericModule'

    from "$buildDir/libs"
    include "*.jar"
    into "$buildDir/packaged"
}

task copyScripts(type: Copy) {

    dependsOn 'copyJars'

    from "$projectDir/scripts"
    into "$buildDir/packaged"
}

task zipCandor(type: Zip) {

    dependsOn 'copyScripts'

    from "$buildDir/packaged"
    include '*'
    include '*/*'
    exclude '*.zip'
    archiveFileName = 'CandorModManager.zip'
    destinationDirectory = file("$buildDir/packaged")
}

task packageCandor {

    dependsOn 'clean', 'zipCandor'
}

// Must be BELOW subprojects{}
task alljavadoc(type: Javadoc) {
    options {
//        addBooleanOption('-enable-preview', true)
//        addStringOption('-release', '14')
    }
    source subprojects.collect { it.sourceSets.main.allJava }
    classpath = files(subprojects.collect { it.sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/docs/javadoc")
}

task javadocJar(type: Jar, dependsOn: alljavadoc) {

    classifier = 'javadoc'
    from alljavadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from subprojects.collect { it.sourceSets.main.allSource }
}

shadowJar.finalizedBy javadocJar
shadowJar.finalizedBy sourcesJar



publishing {

    publications {

        CandorPublication(MavenPublication) {
            from components.java
//            artifact shadowJar
            artifact sourcesJar
            artifact javadocJar
            groupId 'me.shadowchild.candor'
            artifactId 'candor-full'
            version 'snapshot-0.1'
        }
    }
}

bintray {

//    dryRun = true
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ['CandorPublication']
    filesSpec {

        from 'build/libs'
//        exclude 'CandorManager.jar'
        into '.'
    }
    pkg {

        repo = 'candor-alpha'
        name = 'candor-full'
        userOrg = 'candor'
        vcsUrl = 'https://github.com/ShadowChild/CandorManager.git'
        licenses = ['MIT']
        version {

            name = 'snapshot-0.1'
            desc = ' Initial Test Release For Candor'
            released = new Date()
        }
    }
}

tasks.build.dependsOn tasks.shadowJar


